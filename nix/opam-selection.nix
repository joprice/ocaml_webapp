### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "a1a8babbe95b772b31eff8e80ca2620ba6617aa2";
          sha256 = "0wc3c68ng89awr0nibf96ynwa0jwfmcfmdpwmkcqmgq9j5dllaxh";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.10.0";
  repos = repos;
  selection = 
  {
    astring = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1djnad9sq12idlakj069xvwm2nn7wqm137pqbxxai5frkgi08x74";
        package = "packages/astring/astring.0.8.5";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "1ykhg9gd3iy7zsgyiy2p9b1wkpqg9irw5pvcqs3sphq71iir4ml6";
        url = "https://erratique.ch/software/astring/releases/astring-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0qar2gl4x8z5yz0vap6hyvwr813xm66dd7igjx3qii7msxbd78mn";
        package = "packages/base/base.v0.14.0";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "1rkdhsgbcv0a8p29mwvpd2ldz8cjk97pixl43izm54wyin4lp778";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/base-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base-bytes = selection.base-bytes;
        bos = selection.bos or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        rresult = selection.rresult or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ipgmb0bghmh3svszlpzlsy1b7j084gh818pwqic4dh42w3g3nlb";
        package = "packages/base64/base64.3.4.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "0d0n5gd4nkdsz14jnxq13f1f7rzxmndg5xql039a8wfppmazd70w";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v3.4.0/base64-v3.4.0.tbz";
      };
      version = "3.4.0";
    };
    base_bigstring = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_jane = selection.ppx_jane;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:00wbcv0p6fkyva8h9djcnj6kwp1k3djv2a4jwbyv4rky13cyjqx3";
        package = "packages/base_bigstring/base_bigstring.v0.14.0";
      };
      pname = "base_bigstring";
      src = pkgs.fetchurl 
      {
        sha256 = "1fhldk58w56ixkin763kpic512xvkkf9b4mrnjfsbm8in75kzndq";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/base_bigstring-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    base_quickcheck = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_let = selection.ppx_let;
        ppx_sexp_message = selection.ppx_sexp_message;
        ppx_sexp_value = selection.ppx_sexp_value;
        ppxlib = selection.ppxlib;
        splittable_random = selection.splittable_random;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1p0qps9pn30b6gbyc0xr5q1rj62x6zg7izn4zci7sca527ghx96q";
        package = "packages/base_quickcheck/base_quickcheck.v0.14.0";
      };
      pname = "base_quickcheck";
      src = pkgs.fetchurl 
      {
        sha256 = "0y38raqfphv88jkvj7p9wvaisx89arpyb58k9nx4c6kyg9kh751r";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/base_quickcheck-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0lbmlg7kqy0bvca7v5qib69ayiryy5hlkzhzfg7qwq9n29aygc97";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    bin_prot = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        mirage-xen-ocaml = selection.mirage-xen-ocaml or null;
        ocaml = selection.ocaml;
        ppx_compare = selection.ppx_compare;
        ppx_custom_printf = selection.ppx_custom_printf;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_optcomp = selection.ppx_optcomp;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppx_variants_conv = selection.ppx_variants_conv;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0c6qlm4z1l1q6qypz3571jky7bwxk5w60grnv0aq4wy6hjr7x0w5";
        package = "packages/bin_prot/bin_prot.v0.14.0";
      };
      pname = "bin_prot";
      src = pkgs.fetchurl 
      {
        sha256 = "1f1ng6cixi3ci0nb765yfzqk9b3s752hy1i3702kh59gni1psycp";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/bin_prot-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    caqti = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ppx_deriving = selection.ppx_deriving;
        ptime = selection.ptime;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0nhq07cyxrrxc57l3n0k2sfxmjq8jy5lam4f7abcw7wnmvg0f094";
        package = "packages/caqti/caqti.1.2.3";
      };
      pname = "caqti";
      src = pkgs.fetchurl 
      {
        sha256 = "0wigib87x65zn257fd5p2yiq48n21iv0xykj68df3082v5h8piig";
        url = "https://github.com/paurkedal/ocaml-caqti/releases/download/v1.2.3/caqti-v1.2.3.tbz";
      };
      version = "1.2.3";
    };
    caqti-driver-postgresql = 
    {
      opamInputs = 
      {
        caqti = selection.caqti;
        dune = selection.dune;
        ocaml = selection.ocaml;
        postgresql = selection.postgresql;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1fsc81q47vdqpl4awsa6p6p1sz66lzn518nss6wil7jyc84xiv0x";
        package = "packages/caqti-driver-postgresql/caqti-driver-postgresql.1.2.4";
      };
      pname = "caqti-driver-postgresql";
      src = pkgs.fetchurl 
      {
        sha256 = "1b1a627ig5wysbx8m78wpn721l6jxfwm558pm9mlbnar0dh4d504";
        url = "https://github.com/paurkedal/ocaml-caqti/releases/download/v1.2.4/caqti-v1.2.4.tbz";
      };
      version = "1.2.4";
    };
    caqti-lwt = 
    {
      opamInputs = 
      {
        caqti = selection.caqti;
        caqti-driver-sqlite3 = selection.caqti-driver-sqlite3 or null;
        caqti-dynload = selection.caqti-dynload or null;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1yiq3cj9bhidjwhc8rq484d1n9989gi8zaa5m2z8prwl1azdqd4c";
        package = "packages/caqti-lwt/caqti-lwt.1.2.0";
      };
      pname = "caqti-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "079rlw9rghk2835yrv0s536xx5b4xbabsxj4nndcvwa3khgacrxw";
        url = "https://github.com/paurkedal/ocaml-caqti/releases/download/v1.2.0/caqti-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    cohttp = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base64 = selection.base64;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        fmt = selection.fmt or null;
        jsonm = selection.jsonm;
        ocaml = selection.ocaml;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
        stringext = selection.stringext;
        uri = selection.uri;
        uri-sexp = selection.uri-sexp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1mwhj4yf5v45kxqkys733p6j59img9gv748q956l51fp59bbc3p8";
        package = "packages/cohttp/cohttp.2.5.4";
      };
      pname = "cohttp";
      src = pkgs.fetchurl 
      {
        sha256 = "1q04spmki5zis5p5m1vs77i3k7ijm134j62g61071vblwx25z17a";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.4/cohttp-v2.5.4.tbz";
      };
      version = "2.5.4";
    };
    cohttp-lwt = 
    {
      opamInputs = 
      {
        cohttp = selection.cohttp;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:15dmm1b71mriqc6zpiv3jzp61x8fc8al4s8ps78zihgvpjn5ykca";
        package = "packages/cohttp-lwt/cohttp-lwt.2.5.4";
      };
      pname = "cohttp-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1q04spmki5zis5p5m1vs77i3k7ijm134j62g61071vblwx25z17a";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.4/cohttp-v2.5.4.tbz";
      };
      version = "2.5.4";
    };
    cohttp-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        cohttp-lwt = selection.cohttp-lwt;
        conduit-lwt-unix = selection.conduit-lwt-unix;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        magic-mime = selection.magic-mime;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0zl0bbdqd81hjgim6nghskkb4wq624r1blympamzcjxihcnfqzsl";
        package = "packages/cohttp-lwt-unix/cohttp-lwt-unix.2.5.4";
      };
      pname = "cohttp-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1q04spmki5zis5p5m1vs77i3k7ijm134j62g61071vblwx25z17a";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.5.4/cohttp-v2.5.4.tbz";
      };
      version = "2.5.4";
    };
    conduit = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pffrv5zf76xf2n7chjb9gzwd736k7p53a4msv53d8i25qnx1wl3";
        package = "packages/conduit/conduit.2.1.0";
      };
      pname = "conduit";
      src = pkgs.fetchurl 
      {
        sha256 = "0wkyyzc194x1cvb7khxjzkf0jch5m7y6bmxmq5vxrm3yrbxd2kbv";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.1.0/conduit-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    conduit-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit = selection.conduit;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:08zgdickg7p84gdbb8qicav3skbv74ambh137ylm7g3qybswn1h5";
        package = "packages/conduit-lwt/conduit-lwt.2.1.0";
      };
      pname = "conduit-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0wkyyzc194x1cvb7khxjzkf0jch5m7y6bmxmq5vxrm3yrbxd2kbv";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.1.0/conduit-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    conduit-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit-lwt = selection.conduit-lwt;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-sexp = selection.ipaddr-sexp;
        launchd = selection.launchd or null;
        lwt = selection.lwt;
        lwt_ssl = selection.lwt_ssl or null;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        tls = selection.tls or null;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1b18p85np301pwgqaxskh86nyx737qd0lfjdwg4hyw54v4hs68h3";
        package = "packages/conduit-lwt-unix/conduit-lwt-unix.2.2.2";
      };
      pname = "conduit-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1zb83w2pq9c8xrappfxa6y5q93772f5dj22x78camsm77a2c2z55";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v2.2.2/conduit-v2.2.2.tbz";
      };
      version = "2.2.2";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-pkg-config = 
    {
      buildInputs = [ (pkgs.pkgconfig) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:14b3gf8fslh6i2s4h0w689p3qswa19ach4ag7gnrjb3qc0qmgmsj";
        package = "packages/conf-pkg-config/conf-pkg-config.1.3";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "1.3";
    };
    conf-postgresql = 
    {
      buildInputs = [ (pkgs."database/postgresql96-client" or null)
                       (pkgs.libpq-dev or null) (pkgs.postgresql or null)
                       (pkgs.postgresql-dev or null)
                       (pkgs.postgresql-devel or null)
                       (pkgs.postgresql96 or null) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:094z27dxahvzvfg2rgjwryv09lj6f93nbh0zbim7vychqam0h6y3";
        package = "packages/conf-postgresql/conf-postgresql.1";
      };
      pname = "conf-postgresql";
      src = null;
      version = "1";
    };
    core = 
    {
      buildInputs = [ (pkgs.linux-headers or null) ];
      opamInputs = 
      {
        base-threads = selection.base-threads;
        core_kernel = selection.core_kernel;
        dune = selection.dune;
        jst-config = selection.jst-config;
        ocaml = selection.ocaml;
        ppx_jane = selection.ppx_jane;
        sexplib = selection.sexplib;
        spawn = selection.spawn;
        timezone = selection.timezone;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1qvqky9z40dd91dixc9mkqq9wz79dx1nb3c8pqnahzflbh66y0fg";
        package = "packages/core/core.v0.14.0";
      };
      pname = "core";
      src = pkgs.fetchurl 
      {
        sha256 = "0cyfz4ii1ad6jzh0nm4i2d5n50fvbymipiik4qxx2scvadypwi08";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/core-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    core_kernel = 
    {
      opamInputs = 
      {
        base = selection.base;
        base_bigstring = selection.base_bigstring;
        base_quickcheck = selection.base_quickcheck;
        bin_prot = selection.bin_prot;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        jane-street-headers = selection.jane-street-headers;
        jst-config = selection.jst-config;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        ppx_base = selection.ppx_base;
        ppx_hash = selection.ppx_hash;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_jane = selection.ppx_jane;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppx_sexp_message = selection.ppx_sexp_message;
        sexplib = selection.sexplib;
        splittable_random = selection.splittable_random;
        stdio = selection.stdio;
        time_now = selection.time_now;
        typerep = selection.typerep;
        variantslib = selection.variantslib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0w2349spj1z72jvzb1azbkwq34ia2h2yiw3vn5vzm44ljb93z3k4";
        package = "packages/core_kernel/core_kernel.v0.14.0";
      };
      pname = "core_kernel";
      src = pkgs.fetchurl 
      {
        sha256 = "1wc24avy2f4fna871fp7d6qzfwj38wqv0ampfb5n8iayiij41p4k";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/core_kernel-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    cstruct = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        bigarray-compat = selection.bigarray-compat;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0000hm44i73x36zvw10d4pg43lzfs61lkd2jc8dxqc0wyfm939ny";
        package = "packages/cstruct/cstruct.5.2.0";
      };
      pname = "cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "0xbajlc21m0rqpzzwp3aixv8g432ipv3kjh7iiiwq25b7xsz7zkb";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v5.2.0/cstruct-v5.2.0.tbz";
      };
      version = "5.2.0";
    };
    ctypes = 
    {
      opamInputs = 
      {
        conf-ncurses = selection.conf-ncurses or null;
        conf-pkg-config = selection.conf-pkg-config;
        ctypes-foreign = selection.ctypes-foreign or null;
        integers = selection.integers;
        lwt = selection.lwt or null;
        mirage-xen = selection.mirage-xen or null;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ncbgibz56qp5501af1xwc4a8dz88xkmlzr4861mqvbkgiz3pizf";
        package = "packages/ctypes/ctypes.0.17.1";
      };
      pname = "ctypes";
      src = pkgs.fetchurl 
      {
        sha256 = "1sd74bcsln51bnz11c82v6h6fv23dczfyfqqvv9rxa9wp4p3qrs1";
        url = "https://github.com/ocamllabs/ocaml-ctypes/archive/0.17.1.tar.gz";
      };
      version = "0.17.1";
    };
    ctypes-foreign = 
    {
      buildInputs = [ (pkgs.libffi or null) (pkgs.libffi-dev or null)
                       (pkgs.libffi-devel or null) ];
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:00awm92gbd7s1gal6csf4pn15i9hdqsvn6qbrrk1vi21iy2nsb8j";
        package = "packages/ctypes-foreign/ctypes-foreign.0.4.0";
      };
      pname = "ctypes-foreign";
      src = null;
      version = "0.4.0";
    };
    domain-name = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        astring = selection.astring;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1243f92lmszqdf9qvh1v6wv3jd9r5k2h1fhbqqfw9j3imjdfhw0a";
        package = "packages/domain-name/domain-name.0.3.0";
      };
      pname = "domain-name";
      src = pkgs.fetchurl 
      {
        sha256 = "12kc9p2a2fi1ipc2hyhbzivxpph3npglxwdgvhd6v20rqqdyvnad";
        url = "https://github.com/hannesm/domain-name/releases/download/v0.3.0/domain-name-v0.3.0.tbz";
      };
      version = "0.3.0";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0l49rpphilvzkss69710fpyjnsnnicvpi0giyplbzq9p31fjf2vc";
        package = "packages/dune/dune.2.7.0";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "058wiyncczbmlfxj3cnwn5n68wkmbaf4mgjm2bkp2hffpn2wl5xl";
        url = "https://github.com/ocaml/dune/releases/download/2.7.0/dune-2.7.0.tbz";
      };
      version = "2.7.0";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        odoc = selection.odoc or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1q6k63x2bajlc6lrv4llic3cbhzpw5pys44p7ds907620hx8fgs9";
        package = "packages/dune-configurator/dune-configurator.2.7.0";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "058wiyncczbmlfxj3cnwn5n68wkmbaf4mgjm2bkp2hffpn2wl5xl";
        url = "https://github.com/ocaml/dune/releases/download/2.7.0/dune-2.7.0.tbz";
      };
      version = "2.7.0";
    };
    ezjsonm = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        hex = selection.hex;
        jsonm = selection.jsonm;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1h6v4i4487khsi2s4wxicxwcvfb2h3wddq9j96mazgyr2mj7g3mq";
        package = "packages/ezjsonm/ezjsonm.1.2.0";
      };
      pname = "ezjsonm";
      src = pkgs.fetchurl 
      {
        sha256 = "1q6cf63cc614lr141rzhm2w4rhi1snfqai6fmkhvfjs84hfbw2w7";
        url = "https://github.com/mirage/ezjsonm/releases/download/v1.2.0/ezjsonm-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    fieldslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ayrqisqs2shn9nlga3pz3k84y12bw5b6cr6fi8rgv5gi9hr33lq";
        package = "packages/fieldslib/fieldslib.v0.14.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl 
      {
        sha256 = "10n5y376fb5jgqk9h8vq158rm1b36h9lzh6p11q33h6xgvb1v6n3";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/fieldslib-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    fix = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0fg4sn8ij4ws37v96sb9r1zgb6zwfxwp257dbf1n9935b5i8k8q1";
        package = "packages/fix/fix.20200131";
      };
      pname = "fix";
      src = pkgs.fetchurl 
      {
        sha256 = "1p7phjiq5wcpbnncxb2896j49pwi2xwwc6azvljxpj4bdjvwsajb";
        url = "https://gitlab.inria.fr/fpottier/fix/repository/20200131/archive.tar.gz";
      };
      version = "20200131";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jv1qj26idvi2nazvna4aaclp9wzlzwmmg57n5cx2f9ia87qh267";
        package = "packages/fmt/fmt.0.8.8";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iy0rwknd302mr15328g805k210xyigxbija6fzqqfzyb43azvk4";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.8.tbz";
      };
      version = "0.8.8";
    };
    hex = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1p6fbjw8ymp4i5w1v6lcslvc7dq1pkz364kbi22jn6zvm9fpg9k6";
        package = "packages/hex/hex.1.4.0";
      };
      pname = "hex";
      src = pkgs.fetchurl 
      {
        sha256 = "07b9y0lmnflsslkrm6xilkj40n8sf2hjqkyqghnk7sw5l0plkqsp";
        url = "https://github.com/mirage/ocaml-hex/releases/download/v1.4.0/hex-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    hmap = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19yc0fm5c0wzxyrwfy3bcb6yh3hbgwrhhh94ggzjs7di8vv9bkv1";
        package = "packages/hmap/hmap.0.8.1";
      };
      pname = "hmap";
      src = pkgs.fetchurl 
      {
        sha256 = "10xyjy4ab87z7jnghy0wnla9wrmazgyhdwhr4hdmxxdn28dxn03a";
        url = "http://erratique.ch/software/hmap/releases/hmap-0.8.1.tbz";
      };
      version = "0.8.1";
    };
    integers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:182zpcjdz4h4fip3f34rzrqm5vr9qiqcvjh43kjazqkmv5ys3ifl";
        package = "packages/integers/integers.0.4.0";
      };
      pname = "integers";
      src = pkgs.fetchurl 
      {
        sha256 = "0gwixy1i3qk83d8xirz3fcz1ik532w4lrp59rhz568n60rv0hvms";
        url = "https://github.com/ocamllabs/ocaml-integers/archive/0.4.0.tar.gz";
      };
      version = "0.4.0";
    };
    ipaddr = 
    {
      opamInputs = 
      {
        domain-name = selection.domain-name;
        dune = selection.dune;
        macaddr = selection.macaddr;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pb5kbfhf8svgaiazdjj9h9l0cn2n9inrwdkiw850sragp1wsj27";
        package = "packages/ipaddr/ipaddr.5.0.0";
      };
      pname = "ipaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "1b67368zyh8v4xlzm4yn6hgpgrvm2kbcvz2rgy2bkxgkvnqkb3rf";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v5.0.0/ipaddr-v5.0.0.tbz";
      };
      version = "5.0.0";
    };
    ipaddr-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        ipaddr-cstruct = selection.ipaddr-cstruct or null;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0h7c6sm03ly23h3plmiwlybwbajp48jgaw7vkd5wz79nq9nwgx7x";
        package = "packages/ipaddr-sexp/ipaddr-sexp.5.0.0";
      };
      pname = "ipaddr-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "1b67368zyh8v4xlzm4yn6hgpgrvm2kbcvz2rgy2bkxgkvnqkb3rf";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v5.0.0/ipaddr-v5.0.0.tbz";
      };
      version = "5.0.0";
    };
    jane-street-headers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1w5v1xjvbyy6ccwq2hvxbhwagrlmvpqwz317dxx880l39h6ikg76";
        package = "packages/jane-street-headers/jane-street-headers.v0.14.0";
      };
      pname = "jane-street-headers";
      src = pkgs.fetchurl 
      {
        sha256 = "028yxb4h3iy025iy89v8653m5brh7flrjshghs4x99pd690pmfs7";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/jane-street-headers-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    jsonm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0dj8ibg6j4r4a7v7g6d6q3h4m23jv3pxwc7nam4zzbc7h2k69dy9";
        package = "packages/jsonm/jsonm.1.0.1";
      };
      pname = "jsonm";
      src = pkgs.fetchurl 
      {
        sha256 = "1176dcmxb11fnw49b7yysvkjh0kpzx4s48lmdn5psq9vshp5c29w";
        url = "http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    jst-config = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0lysc7rwijrxic5nky8k5fbamcjvh406yg7zcd7278vn63cc5vml";
        package = "packages/jst-config/jst-config.v0.14.0";
      };
      pname = "jst-config";
      src = pkgs.fetchurl 
      {
        sha256 = "1fppr29vn91zpqda8jlnp8bcssd4bf3rn36ig8fnd1yhjrsvz8f6";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/jst-config-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims or null;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1b83y1ccdk4f38961sf0bfawxyb6r0gc88bvz8xzh5hb88s52hbm";
        package = "packages/lwt/lwt.5.3.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1barwvlyqd3xiqhqr01yrcygjvn26yz0rdh68rgnhyx0g21r5kiq";
        url = "https://github.com/ocsigen/lwt/archive/5.3.0.tar.gz";
      };
      version = "5.3.0";
    };
    macaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0z9zc7xpbp1s2sivb6cibc4lcpfha2zslnf06fmnsw85j4kksxd9";
        package = "packages/macaddr/macaddr.5.0.0";
      };
      pname = "macaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "1b67368zyh8v4xlzm4yn6hgpgrvm2kbcvz2rgy2bkxgkvnqkb3rf";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v5.0.0/ipaddr-v5.0.0.tbz";
      };
      version = "5.0.0";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0d8ici4l55iywi80a5rp2mhzni1ppp16vb9f4zsml1898cd92p7l";
        package = "packages/magic-mime/magic-mime.1.1.2";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1sq4rfd9m3693cnzlbds4qh1xpvrv1iz1s1f75nvacbmfjy0nn8c";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.2/magic-mime-v1.1.2.tbz";
      };
      version = "1.1.2";
    };
    menhir = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:04j4p62msqwji50pcz96nk395nzjldx429ykh37gmqj0hyhxqly1";
        package = "packages/menhir/menhir.20200624";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "13m5hy1lvcpiybc1r15cfd1n7gnpbybly8if7lg6fc7j5bhp0df1";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200624/archive.tar.gz";
      };
      version = "20200624";
    };
    menhirLib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:017hgb1nim210y85zqls45gwqbcz2d7xr35h27cy3wn84kjxgl59";
        package = "packages/menhirLib/menhirLib.20200624";
      };
      pname = "menhirLib";
      src = pkgs.fetchurl 
      {
        sha256 = "13m5hy1lvcpiybc1r15cfd1n7gnpbybly8if7lg6fc7j5bhp0df1";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200624/archive.tar.gz";
      };
      version = "20200624";
    };
    menhirSdk = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hmzhm4yc69rs2dzx9s7spi9898p2srahy7jbhjw17v2vgx3dpfs";
        package = "packages/menhirSdk/menhirSdk.20200624";
      };
      pname = "menhirSdk";
      src = pkgs.fetchurl 
      {
        sha256 = "13m5hy1lvcpiybc1r15cfd1n7gnpbybly8if7lg6fc7j5bhp0df1";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200624/archive.tar.gz";
      };
      version = "20200624";
    };
    merlin-extend = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1mf2cw4c3108xpagxqymmj5wzwgplkg7fzc78z8sbf8qnmj69r6a";
        package = "packages/merlin-extend/merlin-extend.0.6";
      };
      pname = "merlin-extend";
      src = pkgs.fetchurl 
      {
        sha256 = "0hvc4mz92x3rl2dxwrhvhzwl4gilnyvvwcqgr45vmdpyjyp3dwn2";
        url = "https://github.com/let-def/merlin-extend/releases/download/v0.6/merlin-extend-v0.6.tbz";
      };
      version = "0.6";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    num = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1x42ndx4shcwgn4c63h57j27bs08y8pyn4sqiizwl47bkcwhq1gj";
        package = "packages/num/num.1.3";
      };
      pname = "num";
      src = pkgs.fetchurl 
      {
        sha256 = "0kg96f7zapbb8hy6n9c53snwqs4rn5xvbdf5nb2m75gah47c6yag";
        url = "https://github.com/ocaml/num/archive/v1.3.tar.gz";
      };
      version = "1.3";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1j9xgxnbgzrar4rwynm7jd0bi3f5qwwkgyxvk1pd8iazvn81pgya";
        package = "packages/ocaml/ocaml.4.10.0";
      };
      pname = "ocaml";
      src = null;
      version = "4.10.0";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wavwn6cq999v787fsxf0v2z71h1vwhxwqbidznc4f9ccwjcdc76";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.10.0";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "0fdw4abyp37q7acqaqawy64gakpg7xckw5ssfpn8dbwxlzqf1fjq";
        url = "https://github.com/ocaml/ocaml/archive/4.10.0.tar.gz";
      };
      version = "4.10.0";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13l8hnv1xclgpayfv8w827ly7il87j4qll7x15sbdrqk980c3jyg";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.1";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "014shj6g10xmclfps22igkiij5jysn8p6lv75h0s4vzjj9wj23yj";
        url = "https://github.com/janestreet/ocaml-compiler-libs/archive/v0.12.1.tar.gz";
      };
      version = "v0.12.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:02ni76lc49343xc1wd58wwaacwkwc6dsgd6xwwsj2rnc4flr0wh9";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.7.3";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "0mgv4h1dffgl4y51bhwrr0yj7q5x9znp4j3ij3r8fss7rxxp31bd";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.7.3/ocaml-migrate-parsetree-v1.7.3.tbz";
      };
      version = "1.7.3";
    };
    ocaml_webapp = 
    {
      opamInputs = 
      {
        caqti = selection.caqti;
        caqti-driver-postgresql = selection.caqti-driver-postgresql;
        caqti-lwt = selection.caqti-lwt;
        dune = selection.dune;
        ocaml = selection.ocaml;
        opium = selection.opium;
        ppx_rapper = selection.ppx_rapper;
        reason = selection.reason;
        tyxml = selection.tyxml;
        tyxml-jsx = selection.tyxml-jsx;
      };
      opamSrc = "ocaml_webapp.opam";
      pname = "ocaml_webapp";
      src = self.directSrc "ocaml_webapp";
      version = "0.1.0";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0j5ymxa4ky208k8m4bprvmvbqf9jnr4d0xwdaivznbv85jq9hw4q";
        package = "packages/ocplib-endian/ocplib-endian.1.1";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0qy5q7p11gxi5anhvi8jj6mr80ml0ih8lax5k579rsr2hsp3sns5";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.1.tar.gz";
      };
      version = "1.1";
    };
    octavius = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13xj7il7gdad672wf8aih0g8h3v03kk2526yswmis460s6irwrpl";
        package = "packages/octavius/octavius.1.2.2";
      };
      pname = "octavius";
      src = pkgs.fetchurl 
      {
        sha256 = "1bg0fcm7haqxvx5wx2cci0mbbq0gf1vw9fa4kkd6jsriw1611jga";
        url = "https://github.com/ocaml-doc/octavius/archive/v1.2.2.tar.gz";
      };
      version = "1.2.2";
    };
    opium = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cmdliner = selection.cmdliner;
        cohttp-lwt-unix = selection.cohttp-lwt-unix;
        dune = selection.dune;
        ezjsonm = selection.ezjsonm;
        logs = selection.logs;
        lwt = selection.lwt;
        magic-mime = selection.magic-mime;
        ocaml = selection.ocaml;
        opium_kernel = selection.opium_kernel;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1cqsk9q98hz7m9qkvsy89gkda8csrb9ki4scvyk53p9q1a4b4w32";
        package = "packages/opium/opium.0.18.0";
      };
      pname = "opium";
      src = pkgs.fetchurl 
      {
        sha256 = "0a2y9gw55psqhqli3a5ps9mfdab8r46fnbj882r2sp366sfcy37q";
        url = "https://github.com/rgrinberg/opium/releases/download/0.18.0/opium-0.18.0.tbz";
      };
      version = "0.18.0";
    };
    opium_kernel = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cohttp = selection.cohttp;
        cohttp-lwt = selection.cohttp-lwt;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        hmap = selection.hmap;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1j4jfm2wlhiymchvyvvlrj810rblnzpvv57vckc4ai1pa4clla9n";
        package = "packages/opium_kernel/opium_kernel.0.18.0";
      };
      pname = "opium_kernel";
      src = pkgs.fetchurl 
      {
        sha256 = "0a2y9gw55psqhqli3a5ps9mfdab8r46fnbj882r2sp366sfcy37q";
        url = "https://github.com/rgrinberg/opium/releases/download/0.18.0/opium-0.18.0.tbz";
      };
      version = "0.18.0";
    };
    parsexp = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:187z69l5222908gdp098b4zll925jdn2kml3wyw1lm9jzwwqhmq2";
        package = "packages/parsexp/parsexp.v0.14.0";
      };
      pname = "parsexp";
      src = pkgs.fetchurl 
      {
        sha256 = "158znj19dvfdcwsgzs3rdhxpj1g4aw0d4nkfr8c05bahf0lnshlb";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/parsexp-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    pg_query = 
    {
      opamInputs = 
      {
        core = selection.core;
        ctypes = selection.ctypes;
        ctypes-foreign = selection.ctypes-foreign;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_deriving = selection.ppx_deriving;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ccgnscylhairak0l4nz5bsp4lalfdgy4vsb8ijr3kfz7hxv5ish";
        package = "packages/pg_query/pg_query.0.9.5";
      };
      pname = "pg_query";
      src = pkgs.fetchurl 
      {
        sha256 = "1kjj02y9k7hxj76xr3kbdxw2nk2pw80mvmc8hixw62bb9riapm4x";
        url = "https://github.com/roddyyaga/pg_query-ocaml/archive/0.9.5.tar.gz";
      };
      version = "0.9.5";
    };
    postgresql = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        conf-postgresql = selection.conf-postgresql;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0jnfbbj4aj5p7apca8cj5hmqbyxcyysg8rdrwyqyi1zp280cdwzb";
        package = "packages/postgresql/postgresql.4.6.2";
      };
      pname = "postgresql";
      src = pkgs.fetchurl 
      {
        sha256 = "02djirz9ia94kif8y68xfswdj9bp5zljiz6i8440dvf3px6niiab";
        url = "https://github.com/mmottl/postgresql-ocaml/releases/download/4.6.2/postgresql-4.6.2.tbz";
      };
      version = "4.6.2";
    };
    ppx_assert = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_cold = selection.ppx_cold;
        ppx_compare = selection.ppx_compare;
        ppx_here = selection.ppx_here;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1xn8fwwr1d361p4w1y145h52qs5rxccfp0wzpbzhiyq7h9gammc3";
        package = "packages/ppx_assert/ppx_assert.v0.14.0";
      };
      pname = "ppx_assert";
      src = pkgs.fetchurl 
      {
        sha256 = "1l2rr4jz2q5b35ryn2z146z7m9v6k8krp5gpn8ilib66mnz5zx15";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_assert-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_cold = selection.ppx_cold;
        ppx_compare = selection.ppx_compare;
        ppx_enumerate = selection.ppx_enumerate;
        ppx_hash = selection.ppx_hash;
        ppx_js_style = selection.ppx_js_style;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1375pp4lsp9migg3dldq6sqcmz15c4rfxac9y967qlvf4h1h0d4x";
        package = "packages/ppx_base/ppx_base.v0.14.0";
      };
      pname = "ppx_base";
      src = pkgs.fetchurl 
      {
        sha256 = "0b7a3fmi90jk8paz0g36yzaq670fbnrbi1j8r5ibh9wbcfli7ji6";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_base-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_bench = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_inline_test = selection.ppx_inline_test;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0zr9y3bg2c19bfrzbz7pzfw18n6j1bg04vhygm19xvzsl9qywzga";
        package = "packages/ppx_bench/ppx_bench.v0.14.0";
      };
      pname = "ppx_bench";
      src = pkgs.fetchurl 
      {
        sha256 = "01bwpaxs04l7akav4w40d2a5vbawsca1lswhqnsj1ciqmbzqls3a";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_bench-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_bin_prot = 
    {
      opamInputs = 
      {
        base = selection.base;
        bin_prot = selection.bin_prot;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0988pl1kl697sc91m6laww4pfs3yf1xchhyfjx8ii580j9jva4w6";
        package = "packages/ppx_bin_prot/ppx_bin_prot.v0.14.0";
      };
      pname = "ppx_bin_prot";
      src = pkgs.fetchurl 
      {
        sha256 = "0wa2jmvm2k88b37pbcafy1mdf5iaip0yxg5dw774sbh28nm08m2s";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_bin_prot-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_cold = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0zclrvfrnqx0w3jsgy04cbj7ik50pyzsbzbk6k8i0zvj0aw7wlwh";
        package = "packages/ppx_cold/ppx_cold.v0.14.0";
      };
      pname = "ppx_cold";
      src = pkgs.fetchurl 
      {
        sha256 = "1madfzhpir9amnxmg530n70vll0jrl59vyp71miji73i6b9sy6n2";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_cold-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_compare = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0sca0xgwn5567zi0i0x72mnr12vwjlqxdn6p234hla0ryjgsxvny";
        package = "packages/ppx_compare/ppx_compare.v0.14.0";
      };
      pname = "ppx_compare";
      src = pkgs.fetchurl 
      {
        sha256 = "0mqxa2s194nif7x4fjn1p5gd9i3bakr8nv27gf8x1g5nmi8q9pmp";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_compare-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_custom_printf = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ij7afyczwgwj4b3dmzgiv8n0wzk5khd1jadm6daps9mq64msaf1";
        package = "packages/ppx_custom_printf/ppx_custom_printf.v0.14.0";
      };
      pname = "ppx_custom_printf";
      src = pkgs.fetchurl 
      {
        sha256 = "0jg6ypjcfbfsaynwih5021mxj0i1g5r2j73q6qs1qyz8xi98mw2z";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_custom_printf-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_deriving = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_derivers = selection.ppx_derivers;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:09f0j3zhwyynnl6dk4i4sd3c7rp09vb5iv3chnf73wcz4dnm7lmn";
        package = "packages/ppx_deriving/ppx_deriving.4.5";
      };
      pname = "ppx_deriving";
      src = pkgs.fetchurl 
      {
        sha256 = "0c8j7hzmn8id7gcq8540c4r1aafcp1ydn93hhd0kj46awxkas5w9";
        url = "https://github.com/ocaml-ppx/ppx_deriving/archive/v4.5.tar.gz";
      };
      version = "4.5";
    };
    ppx_enumerate = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1g6v4avpxdqr1s9va0py7i21grsdn8vmmyvnsixkzpa12cj7wn2z";
        package = "packages/ppx_enumerate/ppx_enumerate.v0.14.0";
      };
      pname = "ppx_enumerate";
      src = pkgs.fetchurl 
      {
        sha256 = "1ij6sffgqhnjwnj9brhrrw1c6xgxlh0s6r17x1qkgnyrc73gfsz8";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_enumerate-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_expect = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppx_inline_test = selection.ppx_inline_test;
        ppxlib = selection.ppxlib;
        re = selection.re;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:03nhlcmfdd9ihzg1yqmfnx28hmzjzysyjpagvap5q6d7rbkxb77x";
        package = "packages/ppx_expect/ppx_expect.v0.14.0";
      };
      pname = "ppx_expect";
      src = pkgs.fetchurl 
      {
        sha256 = "1x43c69xj7h1lp9j2vryysdyximv03z4i4mm4y8kwq50j0j01cn8";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_expect-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_fields_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0z7358j93r3j4sph4n11dd5dd4xgpv65n8ly6ldq833lyn33wg50";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.14.0";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0jr977nwrmj36bkmb5illa0mzjvm6fsgwy32y0kcbvkjd22nvwhp";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_fields_conv-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_fixed_literal = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pghiydydag6kadgclql11jm8xgpcy56lfxl3vqlm9d48yv9dq76";
        package = "packages/ppx_fixed_literal/ppx_fixed_literal.v0.14.0";
      };
      pname = "ppx_fixed_literal";
      src = pkgs.fetchurl 
      {
        sha256 = "0w0a06143mhmczbpr0lfb66r6im7075gck4p0idbcari63sximqj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_fixed_literal-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_hash = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_compare = selection.ppx_compare;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1knpmv5fn6pb4yj58spbdxmgqdw1rxknlrlhlr6g4sc7mrm14xj8";
        package = "packages/ppx_hash/ppx_hash.v0.14.0";
      };
      pname = "ppx_hash";
      src = pkgs.fetchurl 
      {
        sha256 = "0x4wgdvhgd8a49bzari52jpkykxpv6ncgp5ncda3xgg0a9r49s8n";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_hash-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_here = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1mcb4ljvlhybga4rph12wf3frd11dw89mlc32z0dh20ydhf7y1k9";
        package = "packages/ppx_here/ppx_here.v0.14.0";
      };
      pname = "ppx_here";
      src = pkgs.fetchurl 
      {
        sha256 = "0b444djy68v6ji0ypwv5l02pkl151qzrgg96lyhl8dxfrzvj1zkj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_here-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_inline_test = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        time_now = selection.time_now;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1za8rha6cpih76ndbf455m9nqpzpvslm4z0wgc5g2b1iqb9hgapn";
        package = "packages/ppx_inline_test/ppx_inline_test.v0.14.0";
      };
      pname = "ppx_inline_test";
      src = pkgs.fetchurl 
      {
        sha256 = "0p3qh8hj70hdvwn834rw22ary0nn2g1dm24rz0zi21dz65rs9ybz";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_inline_test-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_jane = 
    {
      opamInputs = 
      {
        base_quickcheck = selection.base_quickcheck;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        ppx_base = selection.ppx_base;
        ppx_bench = selection.ppx_bench;
        ppx_bin_prot = selection.ppx_bin_prot;
        ppx_custom_printf = selection.ppx_custom_printf;
        ppx_expect = selection.ppx_expect;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_fixed_literal = selection.ppx_fixed_literal;
        ppx_here = selection.ppx_here;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_let = selection.ppx_let;
        ppx_module_timer = selection.ppx_module_timer;
        ppx_optcomp = selection.ppx_optcomp;
        ppx_optional = selection.ppx_optional;
        ppx_pipebang = selection.ppx_pipebang;
        ppx_sexp_message = selection.ppx_sexp_message;
        ppx_sexp_value = selection.ppx_sexp_value;
        ppx_stable = selection.ppx_stable;
        ppx_string = selection.ppx_string;
        ppx_typerep_conv = selection.ppx_typerep_conv;
        ppx_variants_conv = selection.ppx_variants_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1a32chn26hf4lgkj1alxzxh6gf6xmnk6b1k6f1hyf2cxw4l28qv5";
        package = "packages/ppx_jane/ppx_jane.v0.14.0";
      };
      pname = "ppx_jane";
      src = pkgs.fetchurl 
      {
        sha256 = "18js98xdqf8d54sjn1gccjkwbv2p56qy7bhvjgk94pr3fipfz0v7";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_jane-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_js_style = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        octavius = selection.octavius;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:00pkf2zijkawjcpjrc4qc17rdqpkg6jwhvxlw3ddscs1ih8hxixy";
        package = "packages/ppx_js_style/ppx_js_style.v0.14.0";
      };
      pname = "ppx_js_style";
      src = pkgs.fetchurl 
      {
        sha256 = "141fgxfipfn5jdaxc946dmp5y4fcnbhxms9maji9ddywgx82ya7l";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_js_style-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_let = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13lc4338qg8an01z9q3k3b68p7f77ls60pz6dxcp95h69gvkb6k4";
        package = "packages/ppx_let/ppx_let.v0.14.0";
      };
      pname = "ppx_let";
      src = pkgs.fetchurl 
      {
        sha256 = "1qcrnd86pbr1di5m6z4ps4p15qawwa02jxwz3xfd82hdbjmdwf1s";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_let-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_module_timer = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppxlib = selection.ppxlib;
        stdio = selection.stdio;
        time_now = selection.time_now;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0014xlymrkhy9ncxs6d04mc4b007m15wczkw8zf3rjf4007wy6mj";
        package = "packages/ppx_module_timer/ppx_module_timer.v0.14.0";
      };
      pname = "ppx_module_timer";
      src = pkgs.fetchurl 
      {
        sha256 = "04a7vzk4s3jn6wj94q0hn8kd9vxlzkpcq5ifpvz3bdfgmypjks5z";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_module_timer-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_optcomp = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0z36zszgpkfgm84am98762ml35c5jbi7g2940njmzyvrf63ckz3z";
        package = "packages/ppx_optcomp/ppx_optcomp.v0.14.0";
      };
      pname = "ppx_optcomp";
      src = pkgs.fetchurl 
      {
        sha256 = "0b4zrj9d0ph2j0lwgfwbwc7zhxzkwmld7x4kfyg1rgbi8zg9n5s7";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_optcomp-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_optional = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1g7rwbv2zlaj1h7vz1dd4qwjffvgdq8ms2rh7ahb2gjriwdnyn33";
        package = "packages/ppx_optional/ppx_optional.v0.14.0";
      };
      pname = "ppx_optional";
      src = pkgs.fetchurl 
      {
        sha256 = "1hh6ivlp1qpvyn8l0vhrahkkcp3scf7km254sgplprmk10wnyidz";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_optional-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_pipebang = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ab4d6dmpbnky98kikafmnbid6wg5mh8z5cbg7rjbzygkpmj3ms7";
        package = "packages/ppx_pipebang/ppx_pipebang.v0.14.0";
      };
      pname = "ppx_pipebang";
      src = pkgs.fetchurl 
      {
        sha256 = "19afbbvy72i1347prvkpy3ms75xnk7kl2hn83h40p6yh27100hky";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_pipebang-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_rapper = 
    {
      opamInputs = 
      {
        base = selection.base;
        caqti = selection.caqti;
        caqti-lwt = selection.caqti-lwt;
        caqti-type-calendar = selection.caqti-type-calendar or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        pg_query = selection.pg_query;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07ih3xr5zmvixm2jlymzd4j21v6kz8rx5sxas0x9xi0lsykidb6b";
        package = "packages/ppx_rapper/ppx_rapper.2.0.0";
      };
      pname = "ppx_rapper";
      src = pkgs.fetchurl 
      {
        sha256 = "1ijg852471hhihl7km58mkkkhnjnr21ihpfrxw1cn3jmv3scdd29";
        url = "https://github.com/roddyyaga/ppx_rapper/archive/2.0.0.tar.gz";
      };
      version = "2.0.0";
    };
    ppx_sexp_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1453v33fbqf3shx16glpja734np728rfmwqylk870xvi5bklfrkh";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.14.0";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "1ppim079889dzaw3476jjwvga0zvwv0qc6p2w2bg7dqn7zs1mx6k";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_sexp_conv-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_sexp_message = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1y6i0fyqgfyzjwrqa3ap7qhp91k61wbqnylfvjikjx3584iiscfy";
        package = "packages/ppx_sexp_message/ppx_sexp_message.v0.14.0";
      };
      pname = "ppx_sexp_message";
      src = pkgs.fetchurl 
      {
        sha256 = "10nilix3k1x25b0yxz8yvhyvsrmhdlxln0j0xadc1p7lspz0811n";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_sexp_message-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_sexp_value = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ci0rx0j0rbja1d147bwacw2s61ma6yr05525plx6hqmjb77qhqh";
        package = "packages/ppx_sexp_value/ppx_sexp_value.v0.14.0";
      };
      pname = "ppx_sexp_value";
      src = pkgs.fetchurl 
      {
        sha256 = "0yc6i1yx9mb8pwjkswy09aqg5kz1hgrpjyniq2v6whfjvxl1qrkj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_sexp_value-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_stable = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0cy5wwpbpjpyb37n5kx738w5hxcxr5hnq4whz75h1npqvhf396jb";
        package = "packages/ppx_stable/ppx_stable.v0.14.0";
      };
      pname = "ppx_stable";
      src = pkgs.fetchurl 
      {
        sha256 = "0sbwsil6xa8hwq31hpw5nvy60fh76n2sn1zp4jxny888l467nk10";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_stable-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_string = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:08548i0bq1jbisr072qm3wqlbzp1ynnhkhl5si1x7h4r0rb35yq2";
        package = "packages/ppx_string/ppx_string.v0.14.0";
      };
      pname = "ppx_string";
      src = pkgs.fetchurl 
      {
        sha256 = "0ghwk75s1dlc5ridhlrbzjakq3vxvgixlab5bxz5m21sfnjyrqqc";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_string-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_tools = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:01zmm20wsnp1slmw0mmiphc4fl8a8x5pb7i48p8ayyp8kw0k5hsm";
        package = "packages/ppx_tools/ppx_tools.6.2";
      };
      pname = "ppx_tools";
      src = pkgs.fetchurl 
      {
        sha256 = "046sid5g8si60mv5gbjvjfj2n7m9lzmmc6mmkhsc30cvn11pvr2r";
        url = "https://github.com/ocaml-ppx/ppx_tools/archive/6.2.tar.gz";
      };
      version = "6.2";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0gvay8n8s2vy81pzvym8c6zmp5b6w8lcs9fwys7zp2j1s8rgrax2";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.4.0";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "0sw2676vgbsj133lgs3sl8494fhfldafzvgw4j4dnb1wqwha6pxy";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.4.0.tar.gz";
      };
      version = "5.4.0";
    };
    ppx_typerep_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        typerep = selection.typerep;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0i4mcg049imlbipggjnlbyaffrmzp4xb35ivn1hyscd2kbddrh66";
        package = "packages/ppx_typerep_conv/ppx_typerep_conv.v0.14.0";
      };
      pname = "ppx_typerep_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0fj2rvb8k511spwmpq5aw5xafhcp1jgma1qg81dj45q17zxxcvbb";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_typerep_conv-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_variants_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        variantslib = selection.variantslib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1h249lrsxbdcyzih9pz8dyq034w033flg0vcni88pspy28q2dh20";
        package = "packages/ppx_variants_conv/ppx_variants_conv.v0.14.0";
      };
      pname = "ppx_variants_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0kqjxwg3an72pdc4f29cyk56inx5fmyvsqskgcp6gcc6jd4w9jb6";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_variants_conv-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppxfind = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:047srb1adv0v63f1dgbd814w3xqvcn1rk374yv3wisgpb8qvhx2v";
        package = "packages/ppxfind/ppxfind.1.4";
      };
      pname = "ppxfind";
      src = pkgs.fetchurl 
      {
        sha256 = "0wa9vcrc26kirc2cqqs6kmarbi8gqy3dgdfiv9y7nzsgy1liqacq";
        url = "https://github.com/jeremiedimino/ppxfind/releases/download/1.4/ppxfind-1.4.tbz";
      };
      version = "1.4";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        base = selection.base;
        cinaps = selection.cinaps or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind or null;
        ppx_derivers = selection.ppx_derivers;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1dagj96v3s8vmylrc8j9wdb5b27syyixi8cfq4r6wjz735hvmrwi";
        package = "packages/ppxlib/ppxlib.0.13.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "1n9rxqf3i45xm723vvr1bh568ydqlbfv1m88c5zhw3jh139z7qc1";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.13.0/ppxlib-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    ptime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl 
      {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    reason = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fix = selection.fix;
        menhir = selection.menhir;
        merlin-extend = selection.merlin-extend;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0j6l83q67p18s1j946kxf5h2qs6z6fvb6gw0a5n0pcxhdfnwkmyh";
        package = "packages/reason/reason.3.6.0";
      };
      pname = "reason";
      src = pkgs.fetchurl 
      {
        sha256 = "16mz4f4nzzafl4yihzxkra50i63aqa9yp6cdh3lm0g583dhj6617";
        url = "https://registry.npmjs.org/@esy-ocaml/reason/-/reason-3.6.0.tgz";
      };
      version = "3.6.0";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c7lw8dbchllz3rl801xwpm82r427vnrv7b7kqh0gwjglya50y28";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        num = selection.num;
        ocaml = selection.ocaml;
        parsexp = selection.parsexp;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13jidm5wz2q2a8d52mkc3gl596vlqmpblbsjbq484kjpd0w6yz0f";
        package = "packages/sexplib/sexplib.v0.14.0";
      };
      pname = "sexplib";
      src = pkgs.fetchurl 
      {
        sha256 = "12rlnc6fcrjfdn3gs2agi418sj54ighhs6dfll37zcv7mgywblm2";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0xgkp4gm3yc47xdqzmz064qn40fp27k4ar5axi5i1wffg15qavd4";
        package = "packages/sexplib0/sexplib0.v0.14.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "0adrc0r1vvvr41dcpj8jwkzh1dfgqf0mks9xlnnskqfm3a51iavg";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    spawn = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_expect = selection.ppx_expect or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1gmhpv7952wgg72jrr77fq9as0b4iv20gml2aiqqcw8qd50rg9rg";
        package = "packages/spawn/spawn.v0.13.0";
      };
      pname = "spawn";
      src = pkgs.fetchurl 
      {
        sha256 = "00kcdy6lrqllh7n00d7lkvjvqf4kj0y9a2hj2shp0bjqphnjd9nh";
        url = "https://github.com/janestreet/spawn/releases/download/v0.13.0/spawn-v0.13.0.tbz";
      };
      version = "v0.13.0";
    };
    splittable_random = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        ppx_bench = selection.ppx_bench;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_sexp_message = selection.ppx_sexp_message;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0nzr3bskg6yi4v9mfjizpc1c48q6p9yabk18hr8yql633l3jvbki";
        package = "packages/splittable_random/splittable_random.v0.14.0";
      };
      pname = "splittable_random";
      src = pkgs.fetchurl 
      {
        sha256 = "185rpmdnrzs80br138pnjbx9hfp1046zvj1ap0brq1sxdwzak6lf";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/splittable_random-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0czx19l4sb9v80vwig8fwsn5h8xp44j9v5db2b251zkj71dzd9qx";
        package = "packages/stdio/stdio.v0.14.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "1hj5hraprqy2i90a690l11yjszvb99j818q3d684ryx6p2lddk0l";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/stdio-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:041f37xj7k9np8fkn3ccp5594a198ijivjndqdzi0a3sr587a5p9";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        qtest = selection.qtest or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:15m8a67mps6y22mm5sxpw9b0lldfcmsxim7b331d4qv3l86118gs";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    time_now = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        jane-street-headers = selection.jane-street-headers;
        jst-config = selection.jst-config;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppx_optcomp = selection.ppx_optcomp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:190hli7b7bfxz1paki7bfkamm768llilzkh1y5hvyz22psf5d6x9";
        package = "packages/time_now/time_now.v0.14.0";
      };
      pname = "time_now";
      src = pkgs.fetchurl 
      {
        sha256 = "0hkn2jw4dz5gflnsblskl5wp6z7zbrahwjmaxmsskfviwjg82cqh";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/time_now-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    timezone = 
    {
      opamInputs = 
      {
        core_kernel = selection.core_kernel;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_jane = selection.ppx_jane;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1zw9br34xl87z9rx2sidahv1rin9jsf9xaw3n7rckflmrxvgz1mh";
        package = "packages/timezone/timezone.v0.14.0";
      };
      pname = "timezone";
      src = pkgs.fetchurl 
      {
        sha256 = "095xni0szjqqax2r9zh9820l72ixfga2pl0njnarp3795vkw0rdp";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/timezone-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0lh258gci0jkvpsgdn29z7izny7zf4b2bms7gnxd93kll3k2j8rb";
        package = "packages/topkg/topkg.1.0.2";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "1h9lspfj94673iwhjbqvyq7jhnvpm3ij0y2l3iiyz6i716j321nh";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    typerep = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1f6kka6gd49pqsaqmrfzwvgldswm1sqaakzjzfinb8ya6c0avlkg";
        package = "packages/typerep/typerep.v0.14.0";
      };
      pname = "typerep";
      src = pkgs.fetchurl 
      {
        sha256 = "0rmp5jsjg6sgn5yx0pcvch0phs7nak2fg1d48g5sjcyyyj8n1279";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/typerep-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    tyxml = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        re = selection.re;
        seq = selection.seq;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1q246zb57qzc8v8a2yznc069jh1rxazd8hbgjs0pgk1dgfy7m4bs";
        package = "packages/tyxml/tyxml.4.4.0";
      };
      pname = "tyxml";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    tyxml-jsx = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        reason = selection.reason or null;
        tyxml = selection.tyxml;
        tyxml-syntax = selection.tyxml-syntax;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0pci2gfla8bwza5q5jrqs6x94wnsw21sjfs4fcn4rklwcas7a1c5";
        package = "packages/tyxml-jsx/tyxml-jsx.4.4.0";
      };
      pname = "tyxml-jsx";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    tyxml-syntax = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        re = selection.re;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1l3xj233d2ci3kh4fpfvmx86dklxiz9xyj918310y3yb1f0iwiqb";
        package = "packages/tyxml-syntax/tyxml-syntax.4.4.0";
      };
      pname = "tyxml-syntax";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        re = selection.re;
        stringext = selection.stringext;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1sj41s24mzvjlfxrskj7x8csv3w7ranz03fck1yy42yvvla65v0d";
        package = "packages/uri/uri.3.1.0";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "0hxc2mshmqxz2qmjya47dzf858s6lsf3xvqswpzprkvhv0zq4ln4";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.1.0/uri-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    uri-sexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0szkmh07lp6wnxnhlggc8nqkhwsfgklb20jkfsahjnblaz44n1c1";
        package = "packages/uri-sexp/uri-sexp.3.1.0";
      };
      pname = "uri-sexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0hxc2mshmqxz2qmjya47dzf858s6lsf3xvqswpzprkvhv0zq4ln4";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v3.1.0/uri-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    variantslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1lx393y49n4llcvx3866jqqaid8qlzknh5m99zyb8v5g4w2kcppn";
        package = "packages/variantslib/variantslib.v0.14.0";
      };
      pname = "variantslib";
      src = pkgs.fetchurl 
      {
        sha256 = "11zp27gh282dx9ifbhcp6i7fkc97fvk8amaj58mf1g1hwklc0lm3";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/variantslib-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
  };
}

